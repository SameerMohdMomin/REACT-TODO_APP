[{"E:\\spotify\\todp\\src\\index.js":"1","E:\\spotify\\todp\\src\\reportWebVitals.js":"2","E:\\spotify\\todp\\src\\App.js":"3","E:\\spotify\\todp\\src\\component\\TodoContext.js":"4","E:\\spotify\\todp\\src\\component\\Form.js":"5","E:\\spotify\\todp\\src\\component\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":319,"mtime":1610476896363,"results":"10","hashOfConfig":"8"},{"size":444,"mtime":1610477492340,"results":"11","hashOfConfig":"8"},{"size":940,"mtime":1610477755832,"results":"12","hashOfConfig":"8"},{"size":344,"mtime":1610477546510,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1o8jq5j",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"E:\\spotify\\todp\\src\\index.js",[],["28","29"],"E:\\spotify\\todp\\src\\reportWebVitals.js",[],"E:\\spotify\\todp\\src\\App.js",[],"E:\\spotify\\todp\\src\\component\\TodoContext.js",[],"E:\\spotify\\todp\\src\\component\\Form.js",["30"],"E:\\spotify\\todp\\src\\component\\Todo.js",["31"],"import React, { useContext } from 'react';\r\nimport {Contextp} from './TodoContext';\r\n\r\nconst Todo = () => {\r\n    \r\n    const[todo, settodo]=useContext(Contextp);\r\n\r\n    return(\r\n       <div>\r\n           {todo.map(td => (\r\n               <h2>{td.fullname} | {td.fulljob}</h2>\r\n           ))}\r\n       </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Todo;",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":9,"column":12,"nodeType":"38","messageId":"39","endLine":9,"endColumn":16},{"ruleId":"36","severity":1,"message":"40","line":6,"column":17,"nodeType":"38","messageId":"39","endLine":6,"endColumn":24},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'todo' is assigned a value but never used.","Identifier","unusedVar","'settodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]